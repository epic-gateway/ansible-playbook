---
- name:  create namespace
  command: kubectl create namespace epic
  register: result
  failed_when: result.rc != 0 and "AlreadyExists" not in result.stderr

- name: create secret for acnodal private registry in epic namespace
  command: kubectl -n epic create secret docker-registry gitlab --docker-server=registry.gitlab.com --docker-username={{gitlab_user}} --docker-password={{gitlab_secret}}
  no_log: true
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr

- name: download resource model install artifacts from gitlab to host
  local_action:
    module: ansible.builtin.get_url
    headers:
      PRIVATE-TOKEN: "{{ gitlab_toby_ansible_ro }}"
    url: "{{ resource_model_artifact }}"
    dest: ./tmp/
- name: unarchive install artifacts on host
  local_action:
    module: ansible.builtin.command
    cmd: tar -C tmp -xzf tmp/epic-install.tar.gz
    warn: false

- name: copy core manifest to target
  copy:
    src: ./tmp/deploy/epic-resource-model.yaml
    dest: ./
- name: Install EPIC
  command: kubectl apply -f epic-resource-model.yaml
  # this play can fail when we're bringing up the system because
  # various components (e.g., cert-manager) are in the process of
  # starting up. Back off for a few seconds to give things a chance to
  # settle down and try again.
  retries: 3
  delay: 30
  register: result
  until: result is not failed

- name: process templates
  template:
    src: "tmp/config/install/{{ item }}.j2"
    dest: "{{ item }}"
  loop:
  - epic_v1_epic.yaml
  - epic_v1_serviceprefix.yaml
  - epic_v1_lbservicegroup.yaml
- name: Create sample config singleton, with overrides
  command: kubectl apply -f epic_v1_epic.yaml
  # this play can fail when we're bringing up the system because the
  # controller-manager webhooks are in the process of starting up so
  # you can't connect to them. Back off for a few seconds to give
  # things a chance to settle down and try again.
  retries: 5
  delay: 30
  register: result
  until: result is not failed

- name: Create sample serviceprefix
  command: kubectl apply -f epic_v1_serviceprefix.yaml

- name: Create sample org/namespace
  command: /opt/acnodal/bin/epicctl create user-namespace "{{ group_org_name }}" "{{gitlab_user}}" "{{gitlab_secret}}"
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr

- name: create secret for acnodal private registry in epic-sample namespace
  command: kubectl -n "{{ group_org_ns }}" create secret docker-registry gitlab --docker-server=registry.gitlab.com --docker-username={{gitlab_user}} --docker-password={{gitlab_secret}}
  no_log: true
  register: result
  failed_when: result.rc != 0 and "already exists" not in result.stderr

- name: Create sample service group
  command: kubectl apply -f epic_v1_lbservicegroup.yaml

---
# tasks file for egw

- name: Figure out the name of the user running on the target
  command: whoami
  register: target_user

- name: Pull in the secrets
  include_vars: files/vault.yml
  no_log: true

- include_tasks: osprepk8s.yml
  args:
    apply:
      become: yes
- include_tasks: pfc.yml
  args: {apply: {become: yes}}
- include_tasks: docker-install.yml
- include_tasks: kube-clients-install.yml
- include_tasks: helm-install.yml
  args: {apply: {become: yes}}
- include_tasks: k8s-install.yml

- name: Fetch the EGW admin kubeconfig # so we can use kubectl from the host
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: egw-admin.conf
    flat: yes
  become: yes

- include_tasks: multus-install.yml
- include_tasks: router-install.yml
- include_tasks: cert-manager-install.yml
- include_tasks: vault-install.yml

- name:  create acnodal namespace
  command: kubectl create namespace acnodal
  register: result
  failed_when: result.rc != 0 and "AlreadyExists" not in result.stderr

- name: create secret for acnodal private registry for acnodal namespace
  command: kubectl -n acnodal create secret docker-registry gitlab --docker-server=registry.gitlab.com --docker-username={{gitlab_user}} --docker-password={{gitlab_secret}}
  register: result
  failed_when: result.rc != 0 and "AlreadyExists" not in result.stderr

- include_tasks: egw-data-model.yml
- include_tasks: egw-operators.yml
- include_tasks: web-service-install.yml
- include_tasks: setup-daemon.yml
  args: {apply: {become: yes}}

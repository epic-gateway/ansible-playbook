---
- name: Create egw account and database
  command:
    cmd: psql
    stdin: |
      DO $$
      BEGIN
        CREATE USER {{ postgresql_egw_user }} PASSWORD '{{ postgresql_egw_password }}';
        EXCEPTION WHEN DUPLICATE_OBJECT THEN
        RAISE NOTICE 'user "{{ postgresql_egw_user }}" already exists, skipping';
      END
      $$;

      CREATE EXTENSION IF NOT EXISTS dblink;

      DO $$
      BEGIN
        PERFORM dblink_exec('', 'CREATE DATABASE egw OWNER {{ postgresql_egw_user }}');
        EXCEPTION WHEN duplicate_database THEN RAISE NOTICE '%, skipping', SQLERRM USING ERRCODE = SQLSTATE;
      END
      $$;
  become: yes
  become_user: postgres
- name: Create egw schema
  command:
    cmd: psql egw
    stdin: |
      CREATE SCHEMA IF NOT EXISTS AUTHORIZATION {{ postgresql_egw_user }};
  become: yes
  become_user: postgres

- name: Upload namespace manifest
  copy:
    src: files/acnodal-ns.yml
    dest: /root/
- name:  Create acnodal namespace
  command: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /root/acnodal-ns.yml
  become: yes

- name: create secret for acnodal private registry
  command: kubectl --kubeconfig=/etc/kubernetes/admin.conf -n acnodal create secret docker-registry gitlab --docker-server=registry.gitlab.com --docker-username={{gitlab_user}} --docker-password={{gitlab_secret}}
  become: yes

- name: Upload web service manifest
  copy:
    src: files/egw-ws-demo.yml
    dest: /root/
- name:  Launch web service
  command: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /root/egw-ws-demo.yml
  become: yes

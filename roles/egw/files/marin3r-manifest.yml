apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: marin3r-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: discoveryservicecertificates.operator.marin3r.3scale.net
spec:
  additionalPrinterColumns:
  - JSONPath: .status.ready
    name: Ready
    type: boolean
  - JSONPath: .status.notBefore
    format: date-time
    name: Not Before
    type: string
  - JSONPath: .status.notAfter
    format: date-time
    name: Not After
    type: string
  group: operator.marin3r.3scale.net
  names:
    kind: DiscoveryServiceCertificate
    listKind: DiscoveryServiceCertificateList
    plural: discoveryservicecertificates
    shortNames:
    - dsc
    singular: discoveryservicecertificate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DiscoveryServiceCertificate is used to create certificates, either self-signed or by using a cert-manager CA issuer. This object is used by the DiscoveryService controller to create the required certificates for the different components of the discovery service. Direct use of DiscoveryServiceCertificate objects is discouraged.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DiscoveryServiceCertificateSpec defines the desired state of DiscoveryServiceCertificate
          properties:
            certificateRenewal:
              description: CertificateRenewalConfig configures the certificate renewal process. If unset default behavior is to renew the certificate but not notify of renewals.
              properties:
                enabled:
                  description: Enabled is a flag to enable or disable renewal of the certificate
                  type: boolean
              required:
              - enabled
              type: object
            commonName:
              description: CommonName is the CommonName of the certificate
              type: string
            hosts:
              description: Hosts is the list of hosts the certificate is valid for. Only use when 'IsServerCertificate' is true. If unset, the CommonName field will be used to populate the valid hosts of the certificate.
              items:
                type: string
              type: array
            isCA:
              description: IsCA is a boolean specifying that the certificate is a CA
              type: boolean
            secretRef:
              description: SecretRef is a reference to the secret that will hold the certificate and the private key.
              properties:
                name:
                  description: Name is unique within a namespace to reference a secret resource.
                  type: string
                namespace:
                  description: Namespace defines the space within which the secret name must be unique.
                  type: string
              type: object
            server:
              description: IsServerCertificate is a boolean specifying if the certificate should be issued with server auth usage enabled
              type: boolean
            signer:
              description: Signer specifies  the signer to use to create this certificate. Supported signers are CertManager and SelfSigned.
              properties:
                caSigned:
                  description: CASigned holds specific configuration for the CASigned signer
                  properties:
                    caSecretRef:
                      description: A reference to a Secret containing the CA
                      properties:
                        name:
                          description: Name is unique within a namespace to reference a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the secret name must be unique.
                          type: string
                      type: object
                  required:
                  - caSecretRef
                  type: object
                selfSigned:
                  description: SelfSigned holds specific configuration for the SelfSigned signer
                  type: object
              type: object
            validFor:
              description: ValidFor specifies the validity of the certificate in seconds
              format: int64
              type: integer
          required:
          - commonName
          - secretRef
          - signer
          - validFor
          type: object
        status:
          description: DiscoveryServiceCertificateStatus defines the observed state of DiscoveryServiceCertificate
          properties:
            certificateHash:
              description: CertificateHash stores the current hash of the certificate. It is used for other controllers to validate if a certificate has been re-issued.
              type: string
            conditions:
              description: Conditions represent the latest available observations of an object's state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            notAfter:
              description: NotAfter is the time at which the certificate expires
              format: date-time
              type: string
            notBefore:
              description: NotBefore is the time at which the certificate starts being valid
              format: date-time
              type: string
            ready:
              description: Ready is a boolean that specifies if the certificate is ready to be used
              type: boolean
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: discoveryservices.operator.marin3r.3scale.net
spec:
  group: operator.marin3r.3scale.net
  names:
    kind: DiscoveryService
    listKind: DiscoveryServiceList
    plural: discoveryservices
    singular: discoveryservice
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DiscoveryService represents an envoy discovery service server. Currently only one DiscoveryService per cluster is supported.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DiscoveryServiceSpec defines the desired state of DiscoveryService
          properties:
            ServiceConfig:
              description: ServiceConfig configures the way the DiscoveryService endpoints are exposed
              properties:
                name:
                  type: string
                type:
                  description: ServiceType is an enum with the available discovery service Service types
                  type: string
              type: object
            debug:
              description: Debug enables debugging log level for the discovery service controllers. It is safe to use since secret data is never shown in the logs.
              type: boolean
            image:
              description: Image holds the image to use for the discovery service Deployment
              type: string
            metricsPort:
              description: MetricsPort is the port where metrics are served. Defaults to 8383.
              format: int32
              type: integer
            pkiConfg:
              description: PKIConfig has configuration for the PKI that marin3r manages for the different certificates it requires
              properties:
                rootCertificateAuthority:
                  description: CertificateOptions specifies options to generate the server certificate used both for the xDS server and the mutating webhook server.
                  properties:
                    duration:
                      type: string
                    secretName:
                      type: string
                  required:
                  - duration
                  - secretName
                  type: object
                serverCertificate:
                  description: CertificateOptions specifies options to generate the server certificate used both for the xDS server and the mutating webhook server.
                  properties:
                    duration:
                      type: string
                    secretName:
                      type: string
                  required:
                  - duration
                  - secretName
                  type: object
              required:
              - rootCertificateAuthority
              - serverCertificate
              type: object
            resources:
              description: Resources holds the Resource Requirements to use for the discovery service Deployment. When not set it defaults to no resource requests nor limits. CPU and Memory resources are supported.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            xdsPort:
              description: XdsServerPort is the port where the xDS server listens. Defaults to 18000.
              format: int32
              type: integer
          type: object
        status:
          description: DiscoveryServiceStatus defines the observed state of DiscoveryService
          properties:
            conditions:
              description: Conditions represent the latest available observations of an object's state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: envoybootstraps.marin3r.3scale.net
spec:
  group: marin3r.3scale.net
  names:
    kind: EnvoyBootstrap
    listKind: EnvoyBootstrapList
    plural: envoybootstraps
    singular: envoybootstrap
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EnvoyBootstrap is the Schema for the envoybootstraps API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EnvoyBootstrapSpec defines the desired state of EnvoyBootstrap
          properties:
            clientCertificate:
              description: ClientCertificate is a struct containing options for the certificate used to authenticate with the discovery service
              properties:
                directory:
                  description: Directory defines the directory in the envoy container where the certificate will be mounted
                  type: string
                duration:
                  description: The requested ‘duration’ (i.e. lifetime) of the Certificate
                  type: string
                secretName:
                  description: The Secret where the certificate will be stored
                  type: string
              required:
              - directory
              - duration
              - secretName
              type: object
            discoveryService:
              description: DiscoveryService is the name of the DiscoveryService resource the envoy will be a client of
              type: string
            envoyStaticConfig:
              description: EnvoyStaticConfig is a struct that controls options for the envoy's static config file
              properties:
                adminAccessLogPath:
                  description: AdminAccessLogPath configures where the envoy's admin server logs are written to
                  type: string
                adminBindAddress:
                  description: AdminBindAddress is where envoy's admin server binds to.
                  type: string
                configFile:
                  description: ConfigFile is the path of envoy's bootstrap config file
                  type: string
                configMapNameV2:
                  description: The ConfigMap where the envoy client v2 static config will be stored
                  type: string
                configMapNameV3:
                  description: The ConfigMap where the envoy client v3 static config will be stored
                  type: string
                resourcesDir:
                  description: ResourcesDir is the path where resource files are loaded from. It is used to load discovery messages directly from the filesystem, for example in order to be able to bootstrap certificates and support rotation when they are modified.
                  type: string
                rtdsLayerResourceName:
                  description: RtdsLayerResourceName is the resource name that the envoy client will request when askikng the discovery service for Runtime resources.
                  type: string
              required:
              - adminAccessLogPath
              - adminBindAddress
              - configFile
              - configMapNameV2
              - configMapNameV3
              - resourcesDir
              - rtdsLayerResourceName
              type: object
          required:
          - clientCertificate
          - discoveryService
          - envoyStaticConfig
          type: object
        status:
          description: EnvoyBootstrapStatus defines the observed state of EnvoyBootstrap
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: envoyconfigrevisions.marin3r.3scale.net
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.nodeID
    name: Node ID
    type: string
  - JSONPath: .spec.envoyAPI
    name: Envoy API
    type: string
  - JSONPath: .spec.version
    name: Version
    type: string
  - JSONPath: .status.published
    name: Published
    type: boolean
  - JSONPath: .metadata.creationTimestamp
    format: date-time
    name: Created At
    type: string
  - JSONPath: .status.lastPublishedAt
    format: date-time
    name: Last Published At
    type: string
  - JSONPath: .status.tainted
    name: Tainted
    type: boolean
  group: marin3r.3scale.net
  names:
    kind: EnvoyConfigRevision
    listKind: EnvoyConfigRevisionList
    plural: envoyconfigrevisions
    shortNames:
    - ecr
    singular: envoyconfigrevision
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EnvoyConfigRevision holds an specific version of the EnvoyConfig resources. EnvoyConfigRevisions are automatically created and deleted  by the EnvoyConfig controller and are not intended to be directly used. Use EnvoyConfig objects instead.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EnvoyConfigRevisionSpec defines the desired state of EnvoyConfigRevision
          properties:
            envoyAPI:
              description: EnvoyAPI is the version of envoy's API to use. Defaults to v2.
              enum:
              - v2
              - v3
              type: string
            envoyResources:
              description: EnvoyResources holds the different types of resources suported by the envoy discovery service
              properties:
                clusters:
                  description: 'Clusters is a list of the envoy Cluster resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                endpoints:
                  description: 'Endpoints is a list of the envoy ClusterLoadAssignment resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/endpoint.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                listeners:
                  description: 'Listeners is a list of the envoy Listener resource type. V2 referece: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                routes:
                  description: 'Routes is a list of the envoy Route resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                runtime:
                  description: 'Runtimes is a list of the envoy Runtime resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/service/discovery/v2/rtds.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                secrets:
                  description: Secrets is a list of references to Kubernetes Secret objects.
                  items:
                    description: EnvoySecretResource holds a reference to a k8s Secret from where to take a secret from
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      ref:
                        description: Ref is a reference to a Kubernetes Secret of type "kubernetes.io/tls" from which an envoy Secret resource will be automatically created.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - name
                    - ref
                    type: object
                  type: array
              type: object
            nodeID:
              description: NodeID holds the envoy identifier for the discovery service to know which set of resources to send to each of the envoy clients that connect to it.
              type: string
            serialization:
              description: Serialization specicifies the serialization format used to describe the resources. "json" and "yaml" are supported. "json" is used if unset.
              enum:
              - json
              - b64json
              - yaml
              type: string
            version:
              description: Version is a hash of the EnvoyResources field
              type: string
          required:
          - envoyResources
          - nodeID
          - version
          type: object
        status:
          description: EnvoyConfigRevisionStatus defines the observed state of EnvoyConfigRevision
          properties:
            conditions:
              description: Conditions represent the latest available observations of an object's state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            lastPublishedAt:
              description: LastPublishedAt indicates the last time this config review transitioned to published
              format: date-time
              type: string
            published:
              description: Published signals if the EnvoyConfigRevision is the one currently published in the xds server cache
              type: boolean
            tainted:
              description: Tainted indicates whether the EnvoyConfigRevision is eligible for publishing or not
              type: boolean
          required:
          - conditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: envoyconfigs.marin3r.3scale.net
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.nodeID
    name: Node ID
    type: string
  - JSONPath: .spec.envoyAPI
    name: Envoy API
    type: string
  - JSONPath: .status.desiredVersion
    name: Desired Version
    type: string
  - JSONPath: .status.publishedVersion
    name: Published Version
    type: string
  - JSONPath: .status.cacheState
    name: Cache State
    type: string
  group: marin3r.3scale.net
  names:
    kind: EnvoyConfig
    listKind: EnvoyConfigList
    plural: envoyconfigs
    shortNames:
    - ec
    singular: envoyconfig
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: EnvoyConfig holds the configuration for a given envoy nodeID. The spec of an EnvoyConfig object holds the envoy resources that conform the desired configuration for the given nodeID and that the discovery service will send to any envoy client that identifies itself with that nodeID.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EnvoyConfigSpec defines the desired state of EnvoyConfig
          properties:
            envoyAPI:
              description: EnvoyAPI is the version of envoy's API to use. Defaults to v2.
              enum:
              - v2
              - v3
              type: string
            envoyResources:
              description: EnvoyResources holds the different types of resources suported by the envoy discovery service
              properties:
                clusters:
                  description: 'Clusters is a list of the envoy Cluster resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                endpoints:
                  description: 'Endpoints is a list of the envoy ClusterLoadAssignment resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/endpoint.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                listeners:
                  description: 'Listeners is a list of the envoy Listener resource type. V2 referece: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                routes:
                  description: 'Routes is a list of the envoy Route resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                runtime:
                  description: 'Runtimes is a list of the envoy Runtime resource type. V2 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/service/discovery/v2/rtds.proto V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto'
                  items:
                    description: EnvoyResource holds serialized representation of an envoy resource
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      value:
                        description: Value is the serialized representation of the envoy resource
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                secrets:
                  description: Secrets is a list of references to Kubernetes Secret objects.
                  items:
                    description: EnvoySecretResource holds a reference to a k8s Secret from where to take a secret from
                    properties:
                      name:
                        description: Name of the envoy resource
                        type: string
                      ref:
                        description: Ref is a reference to a Kubernetes Secret of type "kubernetes.io/tls" from which an envoy Secret resource will be automatically created.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - name
                    - ref
                    type: object
                  type: array
              type: object
            nodeID:
              description: NodeID holds the envoy identifier for the discovery service to know which set of resources to send to each of the envoy clients that connect to it.
              type: string
            serialization:
              description: Serialization specicifies the serialization format used to describe the resources. "json" and "yaml" are supported. "json" is used if unset.
              enum:
              - json
              - b64json
              - yaml
              type: string
          required:
          - envoyResources
          - nodeID
          type: object
        status:
          description: EnvoyConfigStatus defines the observed state of EnvoyConfig
          properties:
            cacheState:
              description: CacheState summarizes all the observations about the EnvoyConfig to give the user a concrete idea on the general status of the discovery servie cache. It is intended only for human consumption. Other controllers should relly on conditions to determine the status of the discovery server cache.
              type: string
            conditions:
              description: Conditions represent the latest available observations of an object's state
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            desiredVersion:
              description: DesiredVersion represents the resources version described in the spec of the EnvoyConfig object
              type: string
            publishedVersion:
              description: PublishedVersion is the config version currently served by the envoy discovery service for the give nodeID
              type: string
            revisions:
              description: ConfigRevisions is an ordered list of references to EnvoyConfigRevision objects
              items:
                description: ConfigRevisionRef holds a reference to EnvoyConfigRevision object
                properties:
                  ref:
                    description: Ref is a reference to the EnvoyConfigRevision object that holds the configuration matching the Version field.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  version:
                    description: Version is a hash of the EnvoyResources field
                    type: string
                required:
                - ref
                - version
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: marin3r-controller-manager
  namespace: marin3r-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: marin3r-leader-election-role
  namespace: marin3r-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: marin3r-manager-role
  namespace: marin3r-system
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoybootstraps
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoybootstraps/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigrevisions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigrevisions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.marin3r.3scale.net
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - operator.marin3r.3scale.net
  resources:
  - discoveryservicecertificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.marin3r.3scale.net
  resources:
  - discoveryservicecertificates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: marin3r-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoybootstraps
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoybootstraps/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigrevisions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigrevisions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - marin3r.3scale.net
  resources:
  - envoyconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.marin3r.3scale.net
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - operator.marin3r.3scale.net
  resources:
  - discoveryservicecertificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.marin3r.3scale.net
  resources:
  - discoveryservicecertificates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: marin3r-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: marin3r-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: marin3r-leader-election-rolebinding
  namespace: marin3r-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: marin3r-leader-election-role
subjects:
- kind: ServiceAccount
  name: marin3r-controller-manager
  namespace: marin3r-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: marin3r-manager-rolebinding
  namespace: marin3r-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: marin3r-manager-role
subjects:
- kind: ServiceAccount
  name: marin3r-controller-manager
  namespace: marin3r-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: marin3r-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: marin3r-manager-role
subjects:
- kind: ServiceAccount
  name: marin3r-controller-manager
  namespace: marin3r-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: marin3r-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: marin3r-proxy-role
subjects:
- kind: ServiceAccount
  name: marin3r-controller-manager
  namespace: marin3r-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: marin3r-controller-manager-metrics-service
  namespace: marin3r-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: marin3r-webhook-service
  namespace: marin3r-system
spec:
  ports:
  - port: 9443
    targetPort: 9443
  selector:
    control-plane: controller-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: marin3r-controller-manager
  namespace: marin3r-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - operator
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: ""
        image: quay.io/3scale/marin3r:v0.7.0-alpha6
        name: manager
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
      serviceAccountName: marin3r-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-webhook
  name: marin3r-controller-webhook
  namespace: marin3r-system
spec:
  replicas: 2
  selector:
    matchLabels:
      control-plane: controller-webhook
  template:
    metadata:
      labels:
        control-plane: controller-webhook
    spec:
      containers:
      - args:
        - webhook
        - --tls-dir=/tmp/k8s-webhook-server/serving-certs
        - --tls-cert-name=tls.crt
        - --tls-key-name=tls.key
        command:
        - /manager
        image: quay.io/3scale/marin3r:v0.7.0-alpha6
        name: webhook
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: marin3r-serving-cert
  namespace: marin3r-system
spec:
  dnsNames:
  - marin3r-webhook-service.marin3r-system.svc
  - marin3r-webhook-service.marin3r-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: marin3r-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: marin3r-selfsigned-issuer
  namespace: marin3r-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: marin3r-system/marin3r-serving-cert
  name: marin3r-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: Cg==
    service:
      name: marin3r-webhook-service
      namespace: marin3r-system
      path: /pod-v1-mutate
      port: 9443
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: sidecar-injector.marin3r.3scale.net
  objectSelector:
    matchLabels:
      marin3r.3scale.net/status: enabled
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: Namespaced
  sideEffects: None
  timeoutSeconds: 5
